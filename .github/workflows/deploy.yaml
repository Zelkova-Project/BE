on:
  pull_request:
    branches: [ release, master ]
  push:
    branches: [ release, master ]

jobs:

  branch:
    runs-on: ubuntu-latest

    steps:
      - name: 브랜치 가져오고 포트 설정하기
        run: |
          branch=${GITHUB_REF##*/}
          echo "BRANCH=${branch}" >> $GITHUB_ENV
          if [ "$BRANCH" == "master" ]; then
            echo "PORT=443" >> $GITHUB_ENV
          elif [ "$BRANCH" == "release" ]; then
            echo "PORT=8080" >> $GITHUB_ENV
          else
            echo "Error: Unsupported branch '$BRANCH'. Only 'master' and 'release' branches are supported."
            exit 1
          fi

  load:
    runs-on: ubuntu-latest
    needs: branch

    steps:
      - name: repository 불러오기
        uses: actions/checkout@v4

      - name: JDK 설정
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: properties 불러오기
        run: |
          echo "${{ secrets.KAKAO_PROPERTIES }}" > ./src/main/resources/application-kakao.properties
          echo "${{ secrets.OBJECT_STORAGE_PROPERTIES }}" > ./src/main/resources/application-object-storage.properties
          
          if [ "${{ env.BRANCH }}" == "release" ]; then
            echo "${{ secrets.RELEASE_PROPERTIES }}" > ./src/main/resources/application-release.properties
          elif [ "${{ env.BRANCH }}" == "master" ]; then
            echo "${{ secrets.MASTER_PROPERTIES }}" > ./src/main/resources/application-master.properties
          fi

  test:
    runs-on: ubuntu-latest
    needs: [ branch, load ]
    if: github.event_name == pull_request

    steps:
      - name: 테스트
        run: ./gradlew test -Pprofile="${{ env.BRANCH }}"

  build:
    runs-on: ubuntu-latest
    needs: [ branch, load ]
    if: github.event_name == push

    steps:
      - name: 테스트 및 빌드
        run: ./gradlew clean build -Pprofile="${{ env.BRANCH }}"

      - name: 빌드된 파일 이름 변경
        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar

      - name: SCP로 파일 전송
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          source: project.jar
          target: /home/ubuntu/zelkova/new

      - name: SSH 접속
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          script_stop: true
          scripts: |
            rm -rf /home/ubuntu/zelkova/"${{ env.BRANCH }}"/current
            mkdir /home/ubuntu/zelkova/"${{ env.BRANCH }}"/current
            mv /home/ubuntu/zelkova/new/project.jar /home/ubuntu/zelkova/"${{ env.BRANCH }}"/current/project.jar
            cd /home/ubuntu/zelkova/"${{ env.BRANCH }}"/current
            sudo fuser -k -n tcp "${{ env.PORT }}" || true
            nohup java -jar project.jar --server.port="${{ env.PORT }}" > ./output.log 2>&1 &
            rm -rf /home/ubuntu/zelkova/new
